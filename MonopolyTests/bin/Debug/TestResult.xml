<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!--This file represents the results of running a test suite-->
<test-results name="C:\Users\gartzkds\Documents\Visual Studio 2012\Projects\monopoly\Monopoly\MonopolyTests\bin\Debug\PlayerTests.dll" total="93" errors="0" failures="1" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2013-05-03" time="02:37:21">
  <environment nunit-version="2.6.2.12296" clr-version="2.0.50727.5466" os-version="Microsoft Windows NT 6.1.7601 Service Pack 1" platform="Win32NT" cwd="C:\Program Files (x86)\NUnit 2.6.2\bin" machine-name="GARTZKDS-1" user="gartzkds" user-domain="GARTZKDS-1" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="Assembly" name="C:\Users\gartzkds\Documents\Visual Studio 2012\Projects\monopoly\Monopoly\MonopolyTests\bin\Debug\PlayerTests.dll" executed="True" result="Failure" success="False" time="1.996" asserts="0">
    <results>
      <test-suite type="Namespace" name="MonopolyTests" executed="True" result="Failure" success="False" time="1.995" asserts="0">
        <results>
          <test-suite type="TestFixture" name="BoardTests" executed="True" result="Success" success="True" time="1.679" asserts="0">
            <results>
              <test-case name="MonopolyTests.BoardTests.TestBoardInitializePlayer" executed="True" result="Success" success="True" time="0.900" asserts="1" />
              <test-case name="MonopolyTests.BoardTests.TestBoardPopulateLocations" executed="True" result="Success" success="True" time="0.010" asserts="2" />
              <test-case name="MonopolyTests.BoardTests.TestBuyDisplay" executed="True" result="Success" success="True" time="0.014" asserts="3" />
              <test-case name="MonopolyTests.BoardTests.TestBuyHouse" executed="True" result="Success" success="True" time="0.012" asserts="2" />
              <test-case name="MonopolyTests.BoardTests.TestBuyHouseWithoutMonopoly" executed="True" result="Success" success="True" time="0.011" asserts="2" />
              <test-case name="MonopolyTests.BoardTests.TestBuyHouseWithUneven" executed="True" result="Success" success="True" time="0.010" asserts="2" />
              <test-case name="MonopolyTests.BoardTests.TestBuyProperty" executed="True" result="Success" success="True" time="0.043" asserts="5" />
              <test-case name="MonopolyTests.BoardTests.TestDisableBuyButton" executed="True" result="Success" success="True" time="0.009" asserts="0" />
              <test-case name="MonopolyTests.BoardTests.TestEndTurn" executed="True" result="Success" success="True" time="0.016" asserts="5" />
              <test-case name="MonopolyTests.BoardTests.TestMortgageThrowsAlreadyMortgagedErrors" executed="True" result="Success" success="True" time="0.012" asserts="1" />
              <test-case name="MonopolyTests.BoardTests.TestMortgageThrowsNoHousesErrors" executed="True" result="Success" success="True" time="0.010" asserts="1" />
              <test-case name="MonopolyTests.BoardTests.TestMortgageThrowsNoneSelectedErrors" executed="True" result="Success" success="True" time="0.009" asserts="1" />
              <test-case name="MonopolyTests.BoardTests.TestMovePlayer" executed="True" result="Success" success="True" time="0.026" asserts="1" />
              <test-case name="MonopolyTests.BoardTests.TestMultipleMortgagePropertiesMoneyChanges" executed="True" result="Success" success="True" time="0.011" asserts="2" />
              <test-case name="MonopolyTests.BoardTests.TestNoRentOnMortgagedProperty" executed="True" result="Success" success="True" time="0.012" asserts="2" />
              <test-case name="MonopolyTests.BoardTests.TestOneMortgagePropertiesMoneyChanges" executed="True" result="Success" success="True" time="0.011" asserts="2" />
              <test-case name="MonopolyTests.BoardTests.TestRentMonopoly3Houses" executed="True" result="Success" success="True" time="0.011" asserts="1" />
              <test-case name="MonopolyTests.BoardTests.TestRentMonopolyNoHouses" executed="True" result="Success" success="True" time="0.012" asserts="1" />
              <test-case name="MonopolyTests.BoardTests.TestRentRailroad" executed="True" result="Success" success="True" time="0.012" asserts="1" />
              <test-case name="MonopolyTests.BoardTests.TestRentUtility" executed="True" result="Success" success="True" time="0.015" asserts="1" />
              <test-case name="MonopolyTests.BoardTests.TestRentWith2Houses" executed="True" result="Success" success="True" time="0.010" asserts="1" />
              <test-case name="MonopolyTests.BoardTests.TestRentWorks" executed="True" result="Success" success="True" time="0.010" asserts="1" />
              <test-case name="MonopolyTests.BoardTests.TestRollingDie" executed="True" result="Success" success="True" time="0.020" asserts="4" />
              <test-case name="MonopolyTests.BoardTests.TestThatBoardInitializes" executed="True" result="Success" success="True" time="0.010" asserts="1" />
              <test-case name="MonopolyTests.BoardTests.TestTrade1" executed="True" result="Success" success="True" time="0.010" asserts="2" />
              <test-case name="MonopolyTests.BoardTests.TestTradeAllMoney" executed="True" result="Success" success="True" time="0.009" asserts="2" />
              <test-case name="MonopolyTests.BoardTests.TestTradeEmptyPropertyList" executed="True" result="Success" success="True" time="0.010" asserts="2" />
              <test-case name="MonopolyTests.BoardTests.TestTradeExcessiveMoneyDoesNotTrade" executed="True" result="Success" success="True" time="0.010" asserts="2" />
              <test-case name="MonopolyTests.BoardTests.TestTradeNegativeMoneyDoesNotTrade" executed="True" result="Success" success="True" time="0.010" asserts="2" />
              <test-case name="MonopolyTests.BoardTests.TestTradeOneProperty" executed="True" result="Success" success="True" time="0.010" asserts="2" />
              <test-case name="MonopolyTests.BoardTests.TestTradeTwoProperties" executed="True" result="Success" success="True" time="0.011" asserts="2" />
              <test-case name="MonopolyTests.BoardTests.TestTradeUnownedProperty" executed="True" result="Success" success="True" time="0.010" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="IncomeTaxTests" executed="True" result="Success" success="True" time="0.015" asserts="0">
            <results>
              <test-case name="MonopolyTests.IncomeTaxTests.Test200TaxDeducts" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="MonopolyTests.IncomeTaxTests.TestEffectDefaultsTo200" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="MonopolyTests.IncomeTaxTests.TestInitializes" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="MonopolyTests.IncomeTaxTests.TestPercentageTaxDeducts" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="MonopolyTests.IncomeTaxTests.TestValuesStick" executed="True" result="Success" success="True" time="0.000" asserts="2" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="JailTests" executed="True" result="Success" success="True" time="0.086" asserts="0">
            <results>
              <test-case name="MonopolyTests.JailTests.TestGoToJailCell" executed="True" result="Success" success="True" time="0.012" asserts="2" />
              <test-case name="MonopolyTests.JailTests.TestJailAfter3Double" executed="True" result="Success" success="True" time="0.012" asserts="1" />
              <test-case name="MonopolyTests.JailTests.TestLeaveJailAfterDouble" executed="True" result="Success" success="True" time="0.012" asserts="2" />
              <test-case name="MonopolyTests.JailTests.TestLeaveJailAfterFine" executed="True" result="Success" success="True" time="0.012" asserts="3" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="LuxaryTaxTests" executed="True" result="Success" success="True" time="0.011" asserts="0">
            <results>
              <test-case name="MonopolyTests.LuxaryTaxTests.TestInitializes" executed="True" result="Success" success="True" time="0.000" asserts="1" />
              <test-case name="MonopolyTests.LuxaryTaxTests.TestTaxDeductsFromPlayer" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="MonopolyTests.LuxaryTaxTests.TestValuesStick" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="MonopolyTests.LuxaryTaxTests.TestWorksInCellList" executed="True" result="Success" success="True" time="0.002" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="MoneyCardTests" executed="True" result="Success" success="True" time="0.010" asserts="0">
            <results>
              <test-case name="MonopolyTests.MoneyCardTests.testMoneyCardEffect" executed="True" result="Success" success="True" time="0.000" asserts="1" />
              <test-case name="MonopolyTests.MoneyCardTests.testMoneyCardInitializes" executed="True" result="Success" success="True" time="0.000" asserts="1" />
              <test-case name="MonopolyTests.MoneyCardTests.testMoneyCardProperties" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="MonopolyTests.MoneyCardTests.testNegativeMoneyCardEffect" executed="True" result="Success" success="True" time="0.001" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="PlayerTests" executed="True" result="Success" success="True" time="0.053" asserts="0">
            <results>
              <test-case name="MonopolyTests.PlayerTests.TestCalculateTotalWorthHouses" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="MonopolyTests.PlayerTests.TestCalculateTotalWorthMultProp" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="MonopolyTests.PlayerTests.TestCalculateTotalWorthNoProp" executed="True" result="Success" success="True" time="0.000" asserts="1" />
              <test-case name="MonopolyTests.PlayerTests.TestCalculateTotalWorthProp" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="MonopolyTests.PlayerTests.TestCalculateTotalWorthRailroad" executed="True" result="Success" success="True" time="0.004" asserts="2" />
              <test-case name="MonopolyTests.PlayerTests.TestCalculateTotalWorthUtility" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="MonopolyTests.PlayerTests.TestCountingTypesRailroads" executed="True" result="Success" success="True" time="0.001" asserts="5" />
              <test-case name="MonopolyTests.PlayerTests.TestPassGoFromAdjacent" executed="True" result="Success" success="True" time="0.000" asserts="1" />
              <test-case name="MonopolyTests.PlayerTests.TestPassGoFromAverageDistance" executed="True" result="Success" success="True" time="0.000" asserts="1" />
              <test-case name="MonopolyTests.PlayerTests.TestPassLandOnGo" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="MonopolyTests.PlayerTests.TestPassWithFlagFalse" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="MonopolyTests.PlayerTests.TestPassWithFlagTrue" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="MonopolyTests.PlayerTests.TestPlayerDeedsIndividual" executed="True" result="Success" success="True" time="0.001" asserts="3" />
              <test-case name="MonopolyTests.PlayerTests.TestPlayerDeedsLists" executed="True" result="Success" success="True" time="0.006" asserts="3" />
              <test-case name="MonopolyTests.PlayerTests.TestPlayerMoves" executed="True" result="Success" success="True" time="0.000" asserts="11" />
              <test-case name="MonopolyTests.PlayerTests.TestPlayerStartPosition" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="MonopolyTests.PlayerTests.TestThatPlayerInitializes" executed="True" result="Success" success="True" time="0.001" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="PropertyInitializerTests" executed="True" result="Failure" success="False" time="0.035" asserts="0">
            <results>
              <test-case name="MonopolyTests.PropertyInitializerTests.TestContainsCorrectNumberCells" executed="True" result="Success" success="True" time="0.000" asserts="1" />
              <test-case name="MonopolyTests.PropertyInitializerTests.TestContainsCorrectNumberTypes" executed="True" result="Failure" success="False" time="0.018" asserts="4">
                <failure>
                  <message><![CDATA[  Expected: 3
  But was:  0
]]></message>
                  <stack-trace><![CDATA[at MonopolyTests.PropertyInitializerTests.TestContainsCorrectNumberTypes() in c:\Users\gartzkds\Documents\Visual Studio 2012\Projects\monopoly\Monopoly\MonopolyTests\PropertyInitializerTests.cs:line 49
]]></stack-trace>
                </failure>
              </test-case>
              <test-case name="MonopolyTests.PropertyInitializerTests.testReturnsNotNull" executed="True" result="Success" success="True" time="0.001" asserts="1" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="PropertyTests" executed="True" result="Success" success="True" time="0.034" asserts="0">
            <results>
              <test-case name="MonopolyTests.PropertyTests.testAddFailMortgaged" executed="True" result="Success" success="True" time="0.000" asserts="3" />
              <test-case name="MonopolyTests.PropertyTests.testAddFailNotMonopoly" executed="True" result="Success" success="True" time="0.000" asserts="1" />
              <test-case name="MonopolyTests.PropertyTests.testAddFailTooManyHouses" executed="True" result="Success" success="True" time="0.000" asserts="1" />
              <test-case name="MonopolyTests.PropertyTests.testAddPass" executed="True" result="Success" success="True" time="0.000" asserts="10" />
              <test-case name="MonopolyTests.PropertyTests.testAddUnevenBuild" executed="True" result="Success" success="True" time="0.000" asserts="1" />
              <test-case name="MonopolyTests.PropertyTests.testChangingPlayer" executed="True" result="Success" success="True" time="0.000" asserts="3" />
              <test-case name="MonopolyTests.PropertyTests.testGettingRentDoubleNoHousesMonopoly" executed="True" result="Success" success="True" time="0.000" asserts="2" />
              <test-case name="MonopolyTests.PropertyTests.testGettingRentFailMortgaged" executed="True" result="Success" success="True" time="0.000" asserts="2" />
              <test-case name="MonopolyTests.PropertyTests.testGettingRentSuccess" executed="True" result="Success" success="True" time="0.001" asserts="5" />
              <test-case name="MonopolyTests.PropertyTests.testInitializes" executed="True" result="Success" success="True" time="0.000" asserts="1" />
              <test-case name="MonopolyTests.PropertyTests.testMorgagePayment" executed="True" result="Success" success="True" time="0.000" asserts="1" />
              <test-case name="MonopolyTests.PropertyTests.testPlacingAndLiftingMortgage" executed="True" result="Success" success="True" time="0.000" asserts="6" />
              <test-case name="MonopolyTests.PropertyTests.testRemovingHousesFailNoHouses" executed="True" result="Success" success="True" time="0.000" asserts="1" />
              <test-case name="MonopolyTests.PropertyTests.testRemovingHousesFailRemoveUneven" executed="True" result="Success" success="True" time="0.000" asserts="1" />
              <test-case name="MonopolyTests.PropertyTests.testRemovingHousesSuccess" executed="True" result="Success" success="True" time="0.000" asserts="2" />
              <test-case name="MonopolyTests.PropertyTests.testValuesStore" executed="True" result="Success" success="True" time="0.000" asserts="8" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="RailroadTests" executed="True" result="Success" success="True" time="0.009" asserts="0">
            <results>
              <test-case name="MonopolyTests.RailroadTests.testAddHouseFail" executed="True" result="Success" success="True" time="0.001" asserts="6" />
              <test-case name="MonopolyTests.RailroadTests.testGettingRent" executed="True" result="Success" success="True" time="0.001" asserts="4" />
              <test-case name="MonopolyTests.RailroadTests.testInitializes" executed="True" result="Success" success="True" time="0.001" asserts="1" />
              <test-case name="MonopolyTests.RailroadTests.testValues" executed="True" result="Success" success="True" time="0.001" asserts="6" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="UtilityTests" executed="True" result="Success" success="True" time="0.010" asserts="0">
            <results>
              <test-case name="MonopolyTests.UtilityTests.testAddHouseFail" executed="True" result="Success" success="True" time="0.001" asserts="6" />
              <test-case name="MonopolyTests.UtilityTests.testGettingRent" executed="True" result="Success" success="True" time="0.001" asserts="2" />
              <test-case name="MonopolyTests.UtilityTests.testInitializes" executed="True" result="Success" success="True" time="0.000" asserts="1" />
              <test-case name="MonopolyTests.UtilityTests.testValues" executed="True" result="Success" success="True" time="0.000" asserts="6" />
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>