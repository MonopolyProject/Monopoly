<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Board" xml:space="preserve">
    <value>游戏</value>
  </data>
  <data name="buy" xml:space="preserve">
    <value>购买</value>
  </data>
  <data name="chance" xml:space="preserve">
    <value>机会卡</value>
  </data>
  <data name="Control" xml:space="preserve">
    <value>控制色子</value>
  </data>
  <data name="endTurn" xml:space="preserve">
    <value>结束回合</value>
  </data>
  <data name="magProper" xml:space="preserve">
    <value>管理产业</value>
  </data>
  <data name="p1Label" xml:space="preserve">
    <value>玩家1</value>
  </data>
  <data name="p2Label" xml:space="preserve">
    <value>玩家2</value>
  </data>
  <data name="payFine" xml:space="preserve">
    <value>交罚金</value>
  </data>
  <data name="roll" xml:space="preserve">
    <value>掷色子</value>
  </data>
  <data name="taxLabel" xml:space="preserve">
    <value>所得税</value>
  </data>
  <data name="trade" xml:space="preserve">
    <value>交换产业</value>
  </data>
  <data name="aGo" xml:space="preserve">
    <value>提前出发：$200</value>
  </data>
  <data name="aIlli" xml:space="preserve">
    <value>直接走到伊利诺伊大街通过起点$200</value>
  </data>
  <data name="aNear" xml:space="preserve">
    <value>走到最近的产如果你有10x</value>
  </data>
  <data name="aRail" xml:space="preserve">
    <value>走到最近的铁路</value>
  </data>
  <data name="assess" xml:space="preserve">
    <value>道路维修，每栋房子$40，每栋宾馆$115</value>
  </data>
  <data name="aSt" xml:space="preserve">
    <value>走到圣查理大街</value>
  </data>
  <data name="bday" xml:space="preserve">
    <value>生日快乐，每人给你$10</value>
  </data>
  <data name="beau" xml:space="preserve">
    <value>选美大赛2等奖$10</value>
  </data>
  <data name="Berror" xml:space="preserve">
    <value>银行故障：收取$7</value>
  </data>
  <data name="bo" xml:space="preserve">
    <value>BO铁路</value>
  </data>
  <data name="buyHouse" xml:space="preserve">
    <value>买房</value>
  </data>
  <data name="cancel" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="chair" xml:space="preserve">
    <value>当选主席，给每个玩家$50</value>
  </data>
  <data name="communityChest" xml:space="preserve">
    <value>社区宝箱</value>
  </data>
  <data name="confirm" xml:space="preserve">
    <value>确定</value>
  </data>
  <data name="consult" xml:space="preserve">
    <value>收到$25咨询费</value>
  </data>
  <data name="controlBoard" xml:space="preserve">
    <value>输入想摇的点数</value>
  </data>
  <data name="cross" xml:space="preserve">
    <value>$100填字游戏奖金</value>
  </data>
  <data name="deselectAll" xml:space="preserve">
    <value>取消全选</value>
  </data>
  <data name="divi" xml:space="preserve">
    <value>银行付给你$50</value>
  </data>
  <data name="docF" xml:space="preserve">
    <value>医生费用：缴纳$50</value>
  </data>
  <data name="electricCompany" xml:space="preserve">
    <value>电力公司</value>
  </data>
  <data name="enterPlayerName" xml:space="preserve">
    <value>输入玩家 {0} 姓名</value>
  </data>
  <data name="fourPlayers" xml:space="preserve">
    <value>四个玩家</value>
  </data>
  <data name="freeParking" xml:space="preserve">
    <value>免费停车</value>
  </data>
  <data name="go" xml:space="preserve">
    <value>起点</value>
  </data>
  <data name="goJail" xml:space="preserve">
    <value>直接进监狱</value>
  </data>
  <data name="holi" xml:space="preserve">
    <value>节假日，得到$100奖金</value>
  </data>
  <data name="hosp" xml:space="preserve">
    <value>医院费用$100</value>
  </data>
  <data name="illinoisAvenue" xml:space="preserve">
    <value>伊利诺伊大街</value>
  </data>
  <data name="indianaAvenue" xml:space="preserve">
    <value>印第安纳大街</value>
  </data>
  <data name="inRe" xml:space="preserve">
    <value>退换所得税：$20</value>
  </data>
  <data name="Jail" xml:space="preserve">
    <value>监狱</value>
  </data>
  <data name="lifeIn" xml:space="preserve">
    <value>人寿保险：得到$100</value>
  </data>
  <data name="loan" xml:space="preserve">
    <value>房屋出租$150</value>
  </data>
  <data name="marvinGardens" xml:space="preserve">
    <value>玛温花园</value>
  </data>
  <data name="message1" xml:space="preserve">
    <value>一块地产只能建一栋宾馆</value>
  </data>
  <data name="message2" xml:space="preserve">
    <value>被抵押，不能再被抵押的地产商施工</value>
  </data>
  <data name="message3_1" xml:space="preserve">
    <value>你没有拥有一条街</value>
  </data>
  <data name="message3_2" xml:space="preserve">
    <value>只有拥有一条街才可以建造房屋</value>
  </data>
  <data name="message4" xml:space="preserve">
    <value>请平均的建造房屋</value>
  </data>
  <data name="message5" xml:space="preserve">
    <value>您已成功建造房屋</value>
  </data>
  <data name="morgage" xml:space="preserve">
    <value>抵押</value>
  </data>
  <data name="newYorkAvenue" xml:space="preserve">
    <value>纽约大街</value>
  </data>
  <data name="NumOfPlayers" xml:space="preserve">
    <value>选择玩家数量</value>
  </data>
  <data name="opNight" xml:space="preserve">
    <value>歌剧晚会：每人付$50</value>
  </data>
  <data name="outJ" xml:space="preserve">
    <value>免费出狱</value>
  </data>
  <data name="pennRailroad" xml:space="preserve">
    <value>宾夕法尼亚大道</value>
  </data>
  <data name="player1Trade" xml:space="preserve">
    <value>玩家1</value>
  </data>
  <data name="player2Trade" xml:space="preserve">
    <value>玩家2</value>
  </data>
  <data name="poorTax" xml:space="preserve">
    <value>缴纳贫穷税$15</value>
  </data>
  <data name="readingRailroad" xml:space="preserve">
    <value>里丁铁路</value>
  </data>
  <data name="repair" xml:space="preserve">
    <value>维修所有的地产</value>
  </data>
  <data name="schoolF" xml:space="preserve">
    <value>学校费用$50</value>
  </data>
  <data name="selectAll" xml:space="preserve">
    <value>全选</value>
  </data>
  <data name="selectProperty" xml:space="preserve">
    <value>选择地产</value>
  </data>
  <data name="short" xml:space="preserve">
    <value>近路</value>
  </data>
  <data name="statesAvenue" xml:space="preserve">
    <value>美洲大街</value>
  </data>
  <data name="stock" xml:space="preserve">
    <value>出售股票获利$50</value>
  </data>
  <data name="tennesseeAvenue" xml:space="preserve">
    <value>田纳西大街</value>
  </data>
  <data name="threePlayers" xml:space="preserve">
    <value>三个玩家</value>
  </data>
  <data name="toJ" xml:space="preserve">
    <value>进监狱</value>
  </data>
  <data name="toJail" xml:space="preserve">
    <value>进监狱，不能过起点</value>
  </data>
  <data name="tradePrice" xml:space="preserve">
    <value>输入交易价格</value>
  </data>
  <data name="tRead" xml:space="preserve">
    <value>直接走到里丁铁路</value>
  </data>
  <data name="twoPlayers" xml:space="preserve">
    <value>两个玩家</value>
  </data>
  <data name="uncle" xml:space="preserve">
    <value>远房叔父去世，继承$100</value>
  </data>
  <data name="ventnorAvenue" xml:space="preserve">
    <value>温特诺大街</value>
  </data>
  <data name="virginiaAvenue" xml:space="preserve">
    <value>弗吉尼亚大街</value>
  </data>
  <data name="walk" xml:space="preserve">
    <value>在比克大街上溜达</value>
  </data>
  <data name="waterWork" xml:space="preserve">
    <value>水利工程</value>
  </data>
</root>